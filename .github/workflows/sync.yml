name: Sync from Gitee

on:
  workflow_dispatch:
  schedule:
    - cron: '0 16 * * *'

jobs:
  Sync:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      with:
        token: ${{ secrets.GH_TOKEN }}

    - name: Set up Git
      run: |
        git config user.name "Lucas04-nhr"
        git config user.email "lucas04@foxmail.com"

    - name: Set Git Configuration
      run: |
        git config pull.rebase false

    - name: Pull from Gitee
      run: |
        git remote add gitee https://gitee.com/haanxuan/GT-Manual.git
        git fetch gitee  # Assuming 'main' is your default branch, change it if needed
        git merge -X theirs --allow-unrelated-histories --no-ff gitee/master
        
    - name: Configure SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "$PRIVATE_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: Push to GitHub
      run: |
        git push origin main  # Assuming 'main' is your default branch, change it if needed

  Archive_and_Upload:
    runs-on: ubuntu-latest
    needs: Sync
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Archive Source Code
      run: |
        tar -czvf source_code_${{ github.run_number }}.tar.gz -C ${{ github.workspace }} .
      working-directory: ${{ github.workspace }}

    - name: Upload Source Code Artifact
      uses: actions/upload-artifact@v2
      with:
        name: source_code
        path: source_code_${{ github.run_number }}.tar.gz

  Clean_up:
    runs-on: ubuntu-latest
    needs: Archive_and_Upload

    steps:
    - name: List Artifacts
      run: |
        curl -s -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
          "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" \
          | jq -r '.artifacts | .[] | .name' \
          > artifact_names.txt

    - name: Sort Artifact Names
      run: |
        sort -r -o artifact_names.txt artifact_names.txt

    - name: Keep Only Latest 10 Artifact Names
      run: |
        head -n 10 artifact_names.txt > latest_artifact_names.txt

    - name: Delete Old Artifacts
      run: |
        cat latest_artifact_names.txt | while read -r name; do
          echo "Deleting Artifact: $name"
          curl -s -X DELETE \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/${name}"
        done
